<h2 id="get-rc-data">Get RC Data</h2>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device using desktop or use ssh for remote login.</span>

ROS-Topic Name: /&lt;namespace&gt;/mavros/rc/in
ROS-Topic Type: mavros_msgs/RCIn

Response structure:
    std_msgs/Header header
      uint32 seq
      <span class="nb">time </span>stamp
      string frame_id
    uint8 rssi
    uint16[] channels
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">// CPP API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from cpp.
</span>
<span class="n">Function</span> <span class="n">Definition</span><span class="o">:</span> <span class="kt">int</span> <span class="n">Navigation</span><span class="o">::</span><span class="n">position_set</span><span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">,</span> <span class="kt">float</span> <span class="n">z</span><span class="p">,</span> <span class="kt">float</span> <span class="n">yaw</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">float</span> <span class="n">tolerance</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">relative</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">yaw_valid</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">false</span><span class="p">)</span>

<span class="n">Arguments</span><span class="o">:</span>
    <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="o">:</span> <span class="n">Position</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">NED</span><span class="o">-</span><span class="n">Frame</span> <span class="p">(</span><span class="n">in</span> <span class="n">body</span><span class="o">-</span><span class="n">frame</span> <span class="k">if</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">true</span><span class="p">)</span>
    <span class="n">yaw</span><span class="o">:</span> <span class="n">Yaw</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">radians</span>
    <span class="n">yaw_valid</span><span class="o">:</span> <span class="n">Must</span> <span class="n">be</span> <span class="n">set</span> <span class="n">to</span> <span class="nb">true</span><span class="p">,</span> <span class="k">if</span> <span class="n">yaw</span> <span class="n">setpoint</span> <span class="n">is</span> <span class="n">provided</span>
    <span class="n">tolerance</span><span class="o">:</span> <span class="n">Acceptance</span> <span class="n">radius</span> <span class="n">in</span> <span class="n">meters</span><span class="p">,</span> <span class="k">default</span> <span class="n">value</span><span class="o">=</span><span class="mf">1.0</span><span class="n">m</span>
    <span class="n">relative</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">relative</span> <span class="n">to</span> <span class="n">current</span> <span class="n">position</span> <span class="n">is</span> <span class="n">sent</span>
    <span class="n">async</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">asynchronous</span> <span class="n">mode</span> <span class="n">is</span> <span class="n">set</span>
    <span class="n">body_frame</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">are</span> <span class="n">relative</span> <span class="n">with</span> <span class="n">respect</span> <span class="n">to</span> <span class="n">body</span> <span class="n">frame</span>

<span class="n">Returns</span><span class="o">:</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">true</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">command</span> <span class="n">is</span> <span class="n">successfully</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">the</span> <span class="n">vehicle</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">vehicle</span> <span class="n">reaches</span> <span class="n">given</span> <span class="n">setpoint</span> <span class="n">before</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">30</span><span class="n">secs</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Python API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from python.</span>

<span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// ROS services and topics are accessible from onboard scripts only.
</span>
<span class="n">ROS</span><span class="o">-</span><span class="n">Topic</span> <span class="n">Name</span><span class="o">:</span> <span class="o">/&lt;</span><span class="k">namespace</span><span class="o">&gt;/</span><span class="n">mavros</span><span class="o">/</span><span class="n">rc</span><span class="o">/</span><span class="n">in</span>
<span class="n">ROS</span><span class="o">-</span><span class="n">Topic</span> <span class="n">Type</span><span class="o">:</span> <span class="n">mavros_msgs</span><span class="o">/</span><span class="n">RCIn</span>

<span class="n">Response</span> <span class="n">structure</span><span class="o">:</span>
    <span class="n">std_msgs</span><span class="o">/</span><span class="n">Header</span> <span class="n">header</span>
      <span class="n">uint32</span> <span class="n">seq</span>
      <span class="n">time</span> <span class="n">stamp</span>
      <span class="n">string</span> <span class="n">frame_id</span>
    <span class="n">uint8</span> <span class="n">rssi</span>
    <span class="n">uint16</span><span class="p">[]</span> <span class="n">channels</span>

</code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># ROS services and topics are accessible from onboard scripts only.</span>

<span class="n">ROS</span><span class="o">-</span><span class="n">Topic</span> <span class="n">Name</span><span class="p">:</span> <span class="o">/&lt;</span><span class="n">namespace</span><span class="o">&gt;/</span><span class="n">mavros</span><span class="o">/</span><span class="n">rc</span><span class="o">/</span><span class="ow">in</span>
<span class="n">ROS</span><span class="o">-</span><span class="n">Topic</span> <span class="n">Type</span><span class="p">:</span> <span class="n">mavros_msgs</span><span class="o">/</span><span class="n">RCIn</span>

<span class="n">Response</span> <span class="n">structure</span><span class="p">:</span>
    <span class="n">std_msgs</span><span class="o">/</span><span class="n">Header</span> <span class="n">header</span>
      <span class="n">uint32</span> <span class="n">seq</span>
      <span class="n">time</span> <span class="n">stamp</span>
      <span class="n">string</span> <span class="n">frame_id</span>
    <span class="n">uint8</span> <span class="n">rssi</span>
    <span class="n">uint16</span><span class="p">[]</span> <span class="n">channels</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/ros/&lt;namespace&gt;/mavros/imu/data_euler'</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>  <span class="nl">twist</span><span class="p">:{</span>
    <span class="nl">linear</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">},</span>
    <span class="nx">angular</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">}</span>
<span class="p">}}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">Websocket</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">you</span> 
<span class="nx">initialise</span> <span class="nx">the</span> <span class="nx">websocket</span> <span class="nx">using</span> <span class="nx">websocket</span> <span class="nx">initialisng</span> 
<span class="nx">API</span> <span class="nx">and</span> <span class="nx">and</span> <span class="nx">replace</span> <span class="nx">namespace</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">namespace</span> <span class="nx">of</span> 
<span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span> <span class="nx">before</span> <span class="nx">calling</span> <span class="nx">the</span> <span class="nx">API</span> 
<span class="kd">with</span> <span class="nx">websocket</span><span class="p">.</span>

<span class="nl">name</span><span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/mavros/imu/data_euler'</span><span class="p">,</span>
<span class="nx">messageType</span><span class="p">:</span> <span class="s1">'geometry_msgs/TwistStamped'</span>

<span class="nl">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">twist</span><span class="p">:{</span>
    <span class="nl">linear</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">},</span>
    <span class="nx">angular</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">}</span>
<span class="p">}}</span>

</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /flytpod/navigation/position_set <span class="s2">"{twist: {header: {seq: 0,stamp: {secs: 0, nsecs: 0}, frame_id: ''},twist: {linear: {x: 1.0, y: 3.5, z: -5.0}, angular: {x: 0.0, y: 0.0, z: 0.12}}}, tolerance: 0.0, async: false, relative: false, yaw_valid: true, body_frame: false}"</span>

<span class="c">#sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, relative=false, async=false, yaw_valid=true, body_frame=false</span>
<span class="c">#default value of tolerance=1.0m if left at 0    </span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="cp">#include &lt;core_script_bridge/navigation_bridge.h&gt;
</span>
<span class="n">Navigation</span> <span class="n">nav</span><span class="p">;</span>
<span class="n">nav</span><span class="p">.</span><span class="n">position_set</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">3.5</span><span class="p">,</span> <span class="o">-</span><span class="mf">5.0</span><span class="p">,</span> <span class="mf">0.12</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
<span class="c1">//sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, tolerance=5.0m, relative=false, async=false, yaw_valid=true, body_frame=false
</span></code></pre><pre class="highlight python tab-python"><code><span class="c"># create flyt_python navigation class instance</span>

<span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="cp">#include &lt;core_api/PositionSet.h&gt;
</span>
<span class="n">ros</span><span class="o">::</span><span class="n">NodeHandle</span> <span class="n">nh</span><span class="p">;</span>
<span class="n">ros</span><span class="o">::</span><span class="n">ServiceClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">nh</span><span class="p">.</span><span class="n">serviceClient</span><span class="o">&lt;</span><span class="n">core_api</span><span class="o">::</span><span class="n">PositionSet</span><span class="o">&gt;</span><span class="p">(</span><span class="s">"navigation/position_set"</span><span class="p">);</span>
<span class="n">core_api</span><span class="o">::</span><span class="n">PositionSet</span> <span class="n">srv</span><span class="p">;</span>

<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mf">0.12</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mf">1.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="mf">3.5</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="o">-</span><span class="mf">5.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">tolerance</span> <span class="o">=</span> <span class="mf">5.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">async</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">yaw_valid</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">relative</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">body_frame</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">client</span><span class="p">.</span><span class="n">call</span><span class="p">(</span><span class="n">srv</span><span class="p">);</span>
<span class="n">success</span> <span class="o">=</span> <span class="n">srv</span><span class="p">.</span><span class="n">response</span><span class="p">.</span><span class="n">success</span><span class="p">;</span>

<span class="c1">//sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, tolerance=5.0m, relative=false, async=false, yaw_valid=true, body_frame=false
</span></code></pre><pre class="highlight python tab-python--ros"><code><span class="kn">from</span> <span class="nn">mavros_msgs.msgs</span> <span class="kn">import</span> <span class="n">RCIn</span>
<span class="c"># setup a subscriber and associate a callback function which will be called every time topic is updated.</span>
<span class="n">topic_sub</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">Subscriber</span><span class="p">(</span><span class="s">"/namespace/mavros/rc/in"</span><span class="p">),</span> <span class="n">State</span><span class="p">,</span> <span class="n">topic_callback</span><span class="p">)</span>

<span class="c"># define the callback function which will print the values every time topic is updated</span>
<span class="k">def</span> <span class="nf">topic_callback</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="c"># print data from first 6 channels</span>
    <span class="k">print</span> <span class="n">data</span><span class="o">.</span><span class="n">channels</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span>


<span class="c"># unsubscribe from a topic</span>
<span class="n">topic_sub</span><span class="o">.</span><span class="n">unregister</span><span class="p">()</span>  <span class="c"># unregister topic subscription</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"GET"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/&lt;namespace&gt;/mavros/imu/data_euler"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>


</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="kd">var</span> <span class="nx">imuEulerData</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">Service</span><span class="p">({</span>
    <span class="na">ros</span> <span class="p">:</span> <span class="nx">ros</span><span class="p">,</span>
    <span class="na">name</span> <span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/mavros/imu/data_euler'</span><span class="p">,</span>
    <span class="na">messageType</span> <span class="p">:</span> <span class="s1">'geometry_msgs/TwistStamped'</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">ServiceRequest</span><span class="p">({});</span>

<span class="nx">imuEulerData</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">result</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="mi">0</span>
</code></pre><pre class="highlight python tab-python"><code><span class="p">[</span><span class="mi">1001</span><span class="p">,</span><span class="mi">999</span><span class="p">,</span><span class="mi">1400</span><span class="p">,</span><span class="mi">1234</span><span class="p">,</span><span class="mi">1764</span><span class="p">,</span><span class="mi">1900</span><span class="p">]</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="nl">success:</span> <span class="n">True</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="nb">NotImplemented</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">twist</span><span class="p">:{</span>
    <span class="nl">linear</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">},</span>
    <span class="nx">angular</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">}</span>
<span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="p">{</span>
    <span class="nl">twist</span><span class="p">:{</span>
    <span class="nl">linear</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">},</span>
    <span class="nx">angular</span><span class="p">:{</span>
        <span class="nl">x</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">y</span><span class="p">:</span> <span class="nx">Float</span><span class="p">,</span>
        <span class="nx">z</span><span class="p">:</span> <span class="nx">FLoat</span><span class="p">}</span>
<span class="p">}</span>


</code></pre>
<h3 id="description">Description:</h3>

<p>This API subscribes/polls the input rc channel data. Please see usage information section below before using the API.</p>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable for onboard cpp and python scripts. Scroll down for their counterparts in RESTFul, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Response:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>channels</td>
<td>Array of unit16</td>
<td>Array of PWM data values for channels.</td>
</tr>
</tbody></table>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>All the autopilot state / payload data in FlytOS is shared by ROS topics. Onboard topic subscribers in rospy / roscpp can subscribe to these topics. Take a look at roscpp and rospy API definition for response message structure. </p>

<ul>
<li>Type: Ros Topic</br> </li>
<li>Name: /namespace/mavros/rc/in</br></li>
<li>Response Type: mavros_msgs/RCIn</li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port 80. RESTful APIs can be called from remote platform of your choice. All RESTful APIs can poll the data. For telemetry mode (continuous data stream) use websocket APIs.</p>

<ul>
<li>URL: <code class="prettyprint">GET http://&lt;ip&gt;/ros/&lt;namespace&gt;/mavros/imu/data_euler</code></li>
<li>JSON Response:
{
twist:{
linear:{
    x: Float,
    y: Float,
    z: FLoat},
angular:{
    x: Float,
    y: Float,
    z: FLoat}
}</li>
</ul>

<h3 id="websocket-endpoint">Websocket endpoint:</h3>

<p>Websocket APIs can be called from javascript using  <a href="https://github.com/RobotWebTools/roslibjs">roslibjs library.</a> 
Java websocket clients are supported using <a href="http://wiki.ros.org/rosjava">rosjava.</a></p>

<ul>
<li>name: &lsquo;/namespace/mavros/vfr_hud&rsquo;</br></li>
<li>messageType: &lsquo;mavros_msgs/VFR_HUD&rsquo;</li>
</ul>

<h3 id="api-usage-information">API usage information:</h3>

<ul>
<li>Channel mapping of the data depends on RC calibration. </li>
</ul>
