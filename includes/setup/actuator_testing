<h1 id="vehicle-setup-apis">Vehicle Setup APIs</h1>

<h2 id="actuator-testing">Actuator Testing</h2>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device by connecting a monitor or use ssh for remote login.</span>

ROS-Service Name: /&lt;namespace&gt;/setup/actuator_testing
ROS-Service Type: core_api/ActuatorTesting, below is its description

<span class="c">#request</span>
uint8 actuator_id
float32 time_s
<span class="c">#response</span>
bool success
string message
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">//Not Implemented
</span></code></pre><pre class="highlight python tab-python"><code><span class="c">#Not Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">//Not Recommended
</span></code></pre><pre class="highlight python tab-python--ros"><code><span class="c">#Not Recommended</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/ros/&lt;namespace&gt;/setup/actuator_testing'</span>

<span class="nx">JSON</span> <span class="nx">Request</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">actuator_id</span><span class="p">:</span> <span class="nx">Int</span><span class="p">,</span>
    <span class="nx">time_s</span><span class="p">:</span> <span class="nx">Float</span> <span class="p">}</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">Websocket</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">you</span> 
<span class="nx">initialise</span> <span class="nx">the</span> <span class="nx">websocket</span> <span class="nx">using</span> <span class="nx">websocket</span> <span class="nx">initialising</span> 
<span class="nx">API</span> <span class="nx">and</span> <span class="nx">replace</span> <span class="nx">namespace</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">namespace</span> <span class="nx">of</span> 
<span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span> <span class="nx">before</span> <span class="nx">calling</span> <span class="nx">the</span> <span class="nx">API</span> 
<span class="kd">with</span> <span class="nx">websocket</span><span class="p">.</span>

<span class="nl">name</span><span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/setup/actuator_testing'</span><span class="p">,</span>
<span class="nx">serviceType</span><span class="p">:</span> <span class="s1">'core_api/ActuatorTesting'</span>

<span class="nl">Request</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">actuator_id</span><span class="p">:</span> <span class="nx">Int</span><span class="p">,</span>
    <span class="nx">time_s</span><span class="p">:</span> <span class="nx">Float</span> <span class="p">}</span>

<span class="nl">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span>
<span class="p">}</span>


</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># Refer to rosservice command line API documentation for sample service calls. http://wiki.ros.org/rosservice</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">//Not Implemented
</span></code></pre><pre class="highlight python tab-python"><code><span class="c"># Not Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">//Not Recommended
</span></code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># Not Recommended</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="kd">var</span>  <span class="nx">msgdata</span><span class="o">=</span><span class="p">{};</span>
<span class="nx">msgdata</span><span class="p">[</span><span class="s2">"actuator_id"</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span>
<span class="nx">msgdata</span><span class="p">[</span><span class="s2">"time_s"</span><span class="p">]</span><span class="o">=</span><span class="mf">4.00</span><span class="p">;</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">msgdata</span><span class="p">),</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/&lt;namespace&gt;/setup/actuator_testing"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">success</span><span class="p">);</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="kd">var</span> <span class="nx">actuatorTesting</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">Service</span><span class="p">({</span>
    <span class="na">ros</span> <span class="p">:</span> <span class="nx">ros</span><span class="p">,</span>
    <span class="na">name</span> <span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/setup/actuator_testing'</span><span class="p">,</span>
    <span class="na">serviceType</span> <span class="p">:</span> <span class="s1">'core_api/ActuatorTesting'</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">ServiceRequest</span><span class="p">({</span>
    <span class="na">actuator_id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="na">time_s</span><span class="p">:</span> <span class="mf">4.00</span>
<span class="p">});</span>

<span class="nx">actuatorTesting</span><span class="p">.</span><span class="nx">callService</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Result for service call on '</span>
      <span class="o">+</span> <span class="nx">actuatorTesting</span><span class="p">.</span><span class="nx">name</span>
      <span class="o">+</span> <span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">success</span>
      <span class="o">+</span><span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">//Not Implemented
</span></code></pre><pre class="highlight python tab-python"><code><span class="c"># Not Implemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">//Not Recommended
</span></code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># Not Recommended</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>
</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>
</code></pre>
<h3 id="description">Description:</h3>

<p>This API allows for testing an actuator by providing actuator ID and time to rotate as parameters. If the corresponding actuator rotates on execution of the API correctly for the defined time then the motors are correctly connected.</p>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable for RESTful, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Arguments:</p>

<table><thead>
<tr>
<th>Argument</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>actuator_id</td>
<td>int</td>
<td>Decide which actuator to trigger.</td>
</tr>
<tr>
<td>time_s</td>
<td>float</td>
<td>Time in seconds to rotate the actuator</td>
</tr>
</tbody></table>

<p>Output:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>success</td>
<td>bool</td>
<td>true if action successful</td>
</tr>
<tr>
<td>message</td>
<td>string</td>
<td>debug message</td>
</tr>
</tbody></table>

<h3 id="api-usage-information">API usage information:</h3>

<ul>
<li>Note: Make sure to check the direction of rotation while you trigger this API for correct response from the particular actuator.</li>
</ul>

<aside class="warning">
    This API will **ONLY** work with FlytPOD/PRO and Pixhawk running APM.
</aside>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>APIs in FlytOS are derived from / wrapped around the core services in ROS. Onboard service clients in rospy / roscpp can call these APIs. Take a look at roscpp and rospy API definition for message structure. </p>

<ul>
<li>Type: <code class="prettyprint">Ros Service</code></li>
<li>Name: <code class="prettyprint">/&lt;namespace&gt;/setup/actuator_testing</code></li>
<li>Service Type: <code class="prettyprint">ActuatorTesting</code></li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port 80. RESTful APIs can be called from remote platform of your choice.</p>

<ul>
<li>URL: <code class="prettyprint">POST http://&lt;ip&gt;/ros/&lt;namespace&gt;/setup/actuator_testing</code></li>
<li>JSON Request:
<code class="prettyprint">{
actuator_id: Int,
time_s: Float
}</code></li>
<li>JSON Response:
<code class="prettyprint">{
success: Boolean
message: String
}</code></li>
</ul>

<h3 id="websocket-endpoint">Websocket endpoint:</h3>

<p>Websocket APIs can be called from javascript using <a href="https://github.com/RobotWebTools/roslibjs">roslibjs library</a>.</p>

<p>Java websocket clients are supported using <a href="http://wiki.ros.org/rosjava">rosjava</a>.</p>

<ul>
<li>name: <code class="prettyprint">/&lt;namespace&gt;/setup/actuator_testing</code></li>
<li>serviceType: <code class="prettyprint">core_api/ActuatorTesting</code></li>
</ul>
