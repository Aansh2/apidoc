<h2 id="execute-script">Execute Script</h2>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device by connecting a monitor or use ssh for remote login.</span>

ROS-Service Name: /&lt;namespace&gt;/navigation/exec_script
ROS-Service Type: core_api/ExecScript, below is its description

<span class="c">#Request : Expects name of the application to execute and the arguments to be passed to it</span>
string app_name
string arguments

<span class="c">#Response : return success=true if script starts to get executed</span>
bool success
string message
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="n">No</span> <span class="n">CPP</span> <span class="n">API</span> <span class="n">is</span> <span class="n">available</span> <span class="k">for</span> <span class="n">execution</span> <span class="n">of</span> <span class="n">onboard</span> <span class="n">scripts</span><span class="p">.</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Python API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from python.</span>
<span class="n">Class</span><span class="p">:</span> <span class="n">flyt_python</span><span class="o">.</span><span class="n">API</span><span class="o">.</span><span class="n">navigation</span>

<span class="n">Function</span><span class="p">:</span> <span class="n">exec_script</span><span class="p">(</span><span class="n">app_name</span><span class="p">,</span> <span class="n">arguments</span><span class="p">)</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// ROS services and topics are accessible from onboard scripts only.
</span>
<span class="n">Type</span><span class="o">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="o">:</span> <span class="o">/&lt;</span><span class="k">namespace</span><span class="o">&gt;/</span><span class="n">navigation</span><span class="o">/</span><span class="n">exec_script</span>
<span class="n">call</span> <span class="n">srv</span><span class="o">:</span>
    <span class="o">:</span><span class="n">string</span> <span class="n">app_name</span>
    <span class="o">:</span><span class="n">string</span> <span class="n">arguments</span>
<span class="n">response</span> <span class="n">srv</span><span class="o">:</span> 
    <span class="o">:</span><span class="kt">bool</span> <span class="n">success</span>
    <span class="o">:</span><span class="n">string</span> <span class="n">message</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># ROS services and topics are accessible from onboard scripts only.</span>

<span class="n">Type</span><span class="p">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="p">:</span> <span class="o">/&lt;</span><span class="n">namespace</span><span class="o">&gt;/</span><span class="n">navigation</span><span class="o">/</span><span class="n">exec_script</span>
<span class="n">call</span> <span class="n">srv</span><span class="p">:</span>
    <span class="p">:</span><span class="n">string</span> <span class="n">app_name</span>
    <span class="p">:</span><span class="n">string</span> <span class="n">arguments</span>
<span class="n">response</span> <span class="n">srv</span><span class="p">:</span> 
    <span class="p">:</span><span class="nb">bool</span> <span class="n">success</span>
    <span class="p">:</span><span class="n">string</span> <span class="n">message</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/ros/&lt;namespace&gt;/navigation/exec_script'</span>

<span class="nx">JSON</span> <span class="nx">Request</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">app_name</span> <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
    <span class="nx">arguments</span> <span class="p">:</span> <span class="nb">String</span> <span class="p">}</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">Websocket</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">you</span> 
<span class="nx">initialise</span> <span class="nx">the</span> <span class="nx">websocket</span> <span class="nx">using</span> <span class="nx">websocket</span> <span class="nx">initialising</span> 
<span class="nx">API</span> <span class="nx">and</span> <span class="nx">replace</span> <span class="nx">namespace</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">namespace</span> <span class="nx">of</span> 
<span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span> <span class="nx">before</span> <span class="nx">calling</span> <span class="nx">the</span> <span class="nx">API</span> 
<span class="kd">with</span> <span class="nx">websocket</span><span class="p">.</span>

<span class="nl">name</span><span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/navigation/exec_script'</span><span class="p">,</span>
<span class="nx">serviceType</span><span class="p">:</span> <span class="s1">'core_api/ExecScript'</span>

<span class="nl">Request</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">app_name</span> <span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
    <span class="nx">arguments</span> <span class="p">:</span> <span class="nb">String</span> <span class="p">}</span>

<span class="nl">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">message</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="p">}</span>


</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /&lt;namespace&gt;/navigation/exec_script <span class="s2">"{}"</span>
</code></pre><pre class="highlight cpp tab-cpp"><code></code></pre><pre class="highlight python tab-python"><code><span class="c"># create flyt_python navigation class instance</span>
<span class="kn">from</span> <span class="nn">flyt_python</span> <span class="kn">import</span> <span class="n">API</span>
<span class="n">drone</span> <span class="o">=</span> <span class="n">API</span><span class="o">.</span><span class="n">navigation</span><span class="p">()</span>
<span class="c"># wait for interface to initialize</span>
<span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">3.0</span><span class="p">)</span>

<span class="c"># execute onboard script with name in app_name and arguments to be passed with it as arguments  </span>
<span class="n">drone</span><span class="o">.</span><span class="n">exec_script</span><span class="p">(</span><span class="err">‘</span><span class="n">script</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">args</span><span class="err">’</span><span class="p">)</span>

</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="cp">#include &lt;core_api/ExecScript.h&gt;
</span>
<span class="n">ros</span><span class="o">::</span><span class="n">NodeHandle</span> <span class="n">nh</span><span class="p">;</span>
<span class="n">ros</span><span class="o">::</span><span class="n">ServiceClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">nh</span><span class="p">.</span><span class="n">serviceClient</span><span class="o">&lt;</span><span class="n">core_api</span><span class="o">::</span><span class="n">ExecScript</span><span class="o">&gt;</span><span class="p">(</span><span class="s">"/&lt;namespace&gt;/navigation/exec_script"</span><span class="p">);</span>
<span class="n">core_api</span><span class="o">::</span><span class="n">ExecScript</span> <span class="n">srv</span><span class="p">;</span>

<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">app_name</span> <span class="o">=</span> <span class="s">"sample_script.sh"</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">arguments</span> <span class="o">=</span> <span class="s">"arg1 arg2 arg3"</span><span class="p">;</span>
<span class="n">client</span><span class="p">.</span><span class="n">call</span><span class="p">(</span><span class="n">srv</span><span class="p">);</span>
<span class="kt">bool</span> <span class="n">success</span> <span class="o">=</span> <span class="n">srv</span><span class="p">.</span><span class="n">response</span><span class="p">.</span><span class="n">success</span><span class="p">;</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="n">srv</span><span class="p">.</span><span class="n">response</span><span class="p">.</span><span class="n">message</span><span class="p">;</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="kn">import</span> <span class="nn">rospy</span>
<span class="kn">from</span> <span class="nn">core_api.srv</span> <span class="kn">import</span> <span class="o">*</span>

<span class="n">script_name</span> <span class="o">=</span> <span class="s">"sample_script.sh"</span>
<span class="n">sample_args</span> <span class="o">=</span> <span class="s">"arg1 arg2 arg3"</span>
<span class="k">def</span> <span class="nf">exec_script</span><span class="p">(</span><span class="n">script_name</span><span class="p">,</span> <span class="n">sample_args</span><span class="p">):</span>
    <span class="n">rospy</span><span class="o">.</span><span class="n">wait_for_service</span><span class="p">(</span><span class="s">'/&lt;namespace&gt;/navigation/exec_script'</span><span class="p">)</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">handle</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceProxy</span><span class="p">(</span><span class="s">'/&lt;namespace&gt;/navigation/exec_script'</span><span class="p">,</span> <span class="n">ExecScript</span><span class="p">)</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">handle</span><span class="p">(</span><span class="n">app_name</span><span class="o">=</span><span class="n">script_name</span><span class="p">,</span> <span class="n">arguments</span><span class="o">=</span> <span class="n">sample_args</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">resp</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceException</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
        <span class="n">rospy</span><span class="o">.</span><span class="n">logerr</span><span class="p">(</span><span class="s">"service call failed </span><span class="si">%</span><span class="s">s"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="kd">var</span>  <span class="nx">msgdata</span><span class="o">=</span><span class="p">{};</span>
<span class="nx">msgdata</span><span class="p">[</span><span class="s2">"app_name"</span><span class="p">]</span><span class="o">=</span><span class="s1">'app12'</span><span class="p">;</span>
<span class="nx">msgdata</span><span class="p">[</span><span class="s2">"arguments"</span><span class="p">]</span><span class="o">=</span><span class="s1">'2 45 4 run'</span><span class="p">;</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">msgdata</span><span class="p">),</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/&lt;namespace&gt;/navigation/exec_script"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">success</span><span class="p">);</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="kd">var</span> <span class="nx">execScript</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">Service</span><span class="p">({</span>
    <span class="na">ros</span> <span class="p">:</span> <span class="nx">ros</span><span class="p">,</span>
    <span class="na">name</span> <span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/navigation/exec_script'</span><span class="p">,</span>
    <span class="na">serviceType</span> <span class="p">:</span> <span class="s1">'core_api/ExecScript'</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">ServiceRequest</span><span class="p">({</span>    
    <span class="na">app_name</span> <span class="p">:</span> <span class="s1">'app12'</span><span class="p">,</span>
    <span class="na">arguments</span> <span class="p">:</span> <span class="s1">'2 45 4 run'</span>
<span class="p">});</span>

<span class="nx">execScript</span><span class="p">.</span><span class="nx">callService</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Result for service call on '</span>
      <span class="o">+</span> <span class="nx">execScript</span><span class="p">.</span><span class="nx">name</span>
      <span class="o">+</span> <span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">success</span>
      <span class="o">+</span><span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight cpp tab-cpp"><code></code></pre><pre class="highlight python tab-python"><code><span class="p">{</span><span class="s">'message'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'success'</span><span class="p">:</span> <span class="bp">True</span><span class="p">}</span>

<span class="n">message</span> <span class="p">(</span><span class="n">string</span><span class="p">):</span>  <span class="n">Contains</span> <span class="n">the</span> <span class="n">error</span> <span class="n">message</span> <span class="k">if</span> <span class="n">it</span> <span class="ow">is</span> <span class="n">unable</span> <span class="n">to</span> <span class="n">run</span> <span class="n">the</span> <span class="n">script</span><span class="o">.</span>
<span class="n">success</span> <span class="p">(</span><span class="nb">bool</span><span class="p">):</span> <span class="n">true</span> <span class="k">if</span> <span class="n">action</span> <span class="n">successful</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="nl">success:</span> <span class="n">True</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Success</span><span class="p">:</span> <span class="bp">True</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span>
<span class="p">}</span>

</code></pre>
<h3 id="description">Description:</h3>

<p>This API can run onboard executable scripts in python, shell, etc. </p>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable for onboard cpp and python scripts. Scroll down for their counterparts in RESTful, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Arguments:</p>

<table><thead>
<tr>
<th>Argument</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>app_name</td>
<td>string</td>
<td>Name of the script. Script should be present in /flyt/flytapps/onboard/install directory.</td>
</tr>
<tr>
<td>arguments</td>
<td>string</td>
<td>arguments separated by space e.g. &ldquo;arg1 arg2 arg3&rdquo;</td>
</tr>
</tbody></table>

<p>Output:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>success</td>
<td>bool</td>
<td>true if action successful</td>
</tr>
<tr>
<td>message</td>
<td>string</td>
<td>debug message</td>
</tr>
</tbody></table>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>Navigation APIs in FlytOS are derived from / wrapped around the core navigation services in ROS. Onboard service clients in rospy / roscpp can call these APIs. Take a look at roscpp and rospy API definition for message structure. </p>

<ul>
<li>Type: Ros Service</br> </li>
<li>Name: /&lt;namespace&gt;/navigation/exec_script</br></li>
<li>Service Type: ExecScript</li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port 80. RESTful APIs can be called from remote platform of your choice.</p>

<ul>
<li>URL: <code class="prettyprint">POST http://&lt;ip&gt;/ros/&lt;namespace&gt;/navigation/exec_script</code></li>
<li>JSON Request:
{
app_name : String,
arguments : String
}</li>
<li>JSON Response:
{
success: Boolean
message: String
}</li>
</ul>

<h3 id="websocket-endpoint">Websocket endpoint:</h3>

<p>Websocket APIs can be called from javascript using  <a href="https://github.com/RobotWebTools/roslibjs">roslibjs library.</a> 
Java websocket clients are supported using <a href="http://wiki.ros.org/rosjava">rosjava.</a></p>

<ul>
<li>name: &lsquo;/&lt;namespace&gt;/navigation/exec_script&rsquo;</br></li>
<li>serviceType: &lsquo;core_api/ExecScript&rsquo;</li>
</ul>

<h3 id="api-usage-information">API usage information:</h3>

<ul>
<li>Note that the executable should be present in /flyt/userapps/onboard_user/install directory.</li>
</ul>
