<h2 id="parameter-get-all">Parameter Get All</h2>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device by connecting a monitor or use ssh for remote login.</span>

ROS-Service Name: /&lt;namespace&gt;/param/param_get_all
ROS-Service Type: core_api/ParamGetAll, below is its description

<span class="c">#Request : fresh pull true or false</span>
bool fresh_pull

<span class="c">#Response: ParamInfo list of all parameters</span>
core_api/ParamInfo[] param_list
<span class="c">#Response : success=true if command is successful.  </span>
bool success
<span class="c">#Response : error message, if any</span>
string message
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">// C++ API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from C++.
</span>
<span class="n">Function</span> <span class="n">Definition</span><span class="o">:</span> <span class="kt">bool</span> <span class="n">Param</span><span class="o">::</span><span class="n">param_get_all</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">core_api</span><span class="o">::</span><span class="n">ParamInfo</span><span class="o">&gt;</span> <span class="o">&amp;</span><span class="n">param_list</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">fresh_pull</span><span class="p">)</span>

<span class="n">Arguments</span><span class="o">:</span>
    <span class="n">fresh_pull</span><span class="o">:</span> <span class="n">Whether</span> <span class="n">to</span> <span class="n">fresh</span> <span class="n">pull</span> <span class="n">from</span> <span class="n">autopilot</span> <span class="n">or</span> <span class="n">not</span>
    <span class="n">param_list</span><span class="o">:</span> <span class="n">Variable</span> <span class="n">to</span> <span class="n">store</span> <span class="n">parameter</span> <span class="n">list</span>
<span class="n">Returns</span><span class="o">:</span>
    <span class="n">returns</span> <span class="n">parameter</span> <span class="n">info</span> <span class="n">list</span> <span class="n">in</span> <span class="n">param_list</span> 
    <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">command</span> <span class="n">is</span> <span class="n">successfull</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Python API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from Python.</span>

<span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// ROS services and topics are accessible from onboard scripts only.
</span>
<span class="n">Type</span><span class="o">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="o">:</span> <span class="o">/&lt;</span><span class="k">namespace</span><span class="o">&gt;/</span><span class="n">param</span><span class="o">/</span><span class="n">param_get_all</span>
<span class="n">call</span> <span class="n">srv</span><span class="o">:</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">fresh_pull</span>
<span class="n">response</span> <span class="n">srv</span><span class="o">:</span>
    <span class="o">:</span><span class="n">core_api</span><span class="o">/</span><span class="n">ParamInfo</span><span class="p">[]</span> <span class="n">param_list</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">success</span>
    <span class="o">:</span><span class="n">string</span> <span class="n">message</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># ROS services and topics are accessible from onboard scripts only.</span>

<span class="n">Type</span><span class="p">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="p">:</span> <span class="o">/&lt;</span><span class="n">namespace</span><span class="o">&gt;/</span><span class="n">param</span><span class="o">/</span><span class="n">param_get_all</span>
<span class="n">call</span> <span class="n">srv</span><span class="p">:</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">fresh_pull</span>
<span class="n">response</span> <span class="n">srv</span><span class="p">:</span>
    <span class="p">:</span><span class="n">core_api</span><span class="o">/</span><span class="n">ParamInfo</span><span class="p">[]</span> <span class="n">param_list</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">success</span>
    <span class="p">:</span><span class="n">string</span> <span class="n">message</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/ros/&lt;namespace&gt;/param/param_get_all'</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">param_list</span><span class="p">:</span> <span class="p">[{</span> <span class="na">param_id</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">],</span>
        <span class="na">param_value</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">]},{},{},...]</span>
<span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">Websocket</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">you</span> 
<span class="nx">initialise</span> <span class="nx">the</span> <span class="nx">websocket</span> <span class="nx">using</span> <span class="nx">websocket</span> <span class="nx">initialisng</span> 
<span class="nx">API</span> <span class="nx">and</span> <span class="nx">and</span> <span class="nx">replace</span> <span class="nx">namespace</span> <span class="kd">with</span> <span class="nx">the</span> <span class="nx">namespace</span> <span class="nx">of</span> 
<span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span> <span class="nx">before</span> <span class="nx">calling</span> <span class="nx">the</span> <span class="nx">API</span> 
<span class="kd">with</span> <span class="nx">websocket</span><span class="p">.</span>

<span class="nl">name</span><span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/param/param_get_all'</span><span class="p">,</span>
<span class="nx">serviceType</span><span class="p">:</span> <span class="s1">'core_api/ParamGetAll'</span>

<span class="nl">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
    <span class="nx">param_list</span><span class="p">:</span> <span class="p">[{</span> <span class="na">param_id</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">],</span>
        <span class="na">param_value</span><span class="p">:</span> <span class="p">[</span><span class="nb">String</span><span class="p">]},{},{},...]</span> <span class="p">}</span>


</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /flytpod/param/param_get_all <span class="s2">"fresh_pull: false"</span> 
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="cp">#include &lt;cpp_api/param_bridge.h&gt;
</span>
<span class="n">Param</span> <span class="n">param</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">fresh_pull</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">core_api</span><span class="o">/</span><span class="n">ParamInfo</span><span class="p">[]</span> <span class="n">param_list</span><span class="p">;</span>

<span class="n">param</span><span class="p">.</span><span class="n">param_get_all</span><span class="p">(</span><span class="n">param_list</span><span class="p">,</span> <span class="n">fresh_pull</span><span class="p">);</span>
<span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Parameter list: "</span> <span class="o">&lt;&lt;</span> <span class="n">param_list</span> <span class="o">&lt;&lt;</span> <span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
</code></pre><pre class="highlight python tab-python"><code><span class="nb">NotImplemented</span>

</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// Please refer to Roscpp documentation for sample service clients. http://wiki.ros.org/ROS/Tutorials/WritingServiceClient(c%2B%2B)
</span></code></pre><pre class="highlight python tab-python--ros"><code>
<span class="c"># Please refer to Rospy documentation for sample service clients. http://wiki.ros.org/ROS/Tutorials/WritingServiceClient(python)</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code>
<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"GET"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">data</span><span class="p">:</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">msgdata</span><span class="p">),</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/&lt;namespace&gt;/param/param_get_all"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">param_list</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="kd">var</span> <span class="nx">paramGetAll</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">Service</span><span class="p">({</span>
    <span class="na">ros</span> <span class="p">:</span> <span class="nx">ros</span><span class="p">,</span>
    <span class="na">name</span> <span class="p">:</span> <span class="s1">'/&lt;namespace&gt;/param/param_get_all'</span><span class="p">,</span>
    <span class="na">serviceType</span> <span class="p">:</span> <span class="s1">'core_api/ParamGetAll'</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ROSLIB</span><span class="p">.</span><span class="nx">ServiceRequest</span><span class="p">({});</span>

<span class="nx">paramGetAll</span><span class="p">.</span><span class="nx">callService</span><span class="p">(</span><span class="nx">request</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Result for service call on '</span>
      <span class="o">+</span> <span class="nx">ParamGetAll</span><span class="p">.</span><span class="nx">name</span>
      <span class="o">+</span> <span class="s1">': '</span>
      <span class="o">+</span> <span class="nx">result</span><span class="p">.</span><span class="nx">param_list</span><span class="p">);</span>
<span class="p">});</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>    success:True,
    param_list:[<span class="o">{}</span>,<span class="o">{}</span>,<span class="o">{}</span>,....]
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="n">Function</span> <span class="n">returns</span> <span class="mi">0</span>
<span class="n">param_list</span> <span class="n">is</span> <span class="n">populated</span> <span class="n">with</span> <span class="n">all</span> <span class="n">the</span> <span class="n">received</span> <span class="n">parameters</span>
</code></pre><pre class="highlight python tab-python"><code><span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code></code></pre><pre class="highlight python tab-python--ros"><code></code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span><span class="p">,</span>
    <span class="nx">param_list</span><span class="p">:[{},{},{},....]</span>
<span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="p">{</span>
    <span class="nl">success</span><span class="p">:</span><span class="nx">True</span><span class="p">,</span>
    <span class="nx">param_list</span><span class="p">:[{},{},{},....]</span>    
<span class="p">}</span>

</code></pre>
<h3 id="description">Description:</h3>

<p>This API gets all the parameters available in FlytOS with their values.</p>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable in RESTful, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Output:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>success</td>
<td>bool</td>
<td>true if action successful</td>
</tr>
<tr>
<td>param_id</td>
<td>string</td>
<td>Name of the parameter</td>
</tr>
<tr>
<td>param_value</td>
<td>string</td>
<td>value of the parameter</td>
</tr>
</tbody></table>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>APIs in FlytOS are derived from / wrapped around the core services in ROS. Onboard service clients in rospy / roscpp can call these APIs. Take a look at roscpp and rospy api definition for message structure. </p>

<ul>
<li>Type: Ros Service</br> </li>
<li>Name: /&lt;namespace&gt;/param/param_get_all</br></li>
<li>Service Type: ParamGetAll</li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port 80. RESTful APIs can be called from remote platform of your choice.</p>

<ul>
<li>URL: <code class="prettyprint">POST http://&lt;ip&gt;/ros/&lt;namespace&gt;/param/param_get_all</code></li>
<li>JSON Response:
{
success: Boolean,
param_list:[{
    param_id: String,
    param_value: String
},{},{},&hellip;.]
}</li>
</ul>

<h3 id="websocket-endpoint">Websocket endpoint:</h3>

<p>Websocket APIs can be called from javascript using  <a href="https://github.com/RobotWebTools/roslibjs">roslibjs library.</a> 
Java websocket clients are supported using <a href="http://wiki.ros.org/rosjava">rosjava.</a></p>

<ul>
<li>name: &lsquo;/&lt;namespace&gt;/param/param_get_all&rsquo;</br></li>
<li>serviceType: &lsquo;core_api/ParamGetAll&rsquo;</li>
</ul>

<!-- ### API usage information:
Note: You can either set body_frame or relative flag. If both are set, body_frame takes precedence.

Tip: Asynchronous mode - The API call would return as soon as the command has been sent to the autopilot, irrespective of whether the vehicle has reached the given setpoint or not.

Tip: Synchronous mode - The API call would wait for the function to return, which happens when either the position setpoint is reached or timeout=30secs is over.
 -->
