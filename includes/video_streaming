<h1 id="video-streaming">Video Streaming</h1>

<blockquote>
<p>Definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># API call described below requires shell access, either login to the device using desktop or use ssh for remote login.</span>

ROS-Service Name: /&lt;namespace&gt;/navigation/position_set
ROS-Service Type: core_api/PositionSet, below is its description

<span class="c">#Request : expects position setpoint via twist.twist.linear.x,linear.y,linear.z</span>
<span class="c">#Request : expects yaw setpoint via twist.twist.angular.z (send yaw_valid=true)</span>
geometry_msgs/TwistStamped twist
float32 tolerance
bool async
bool relative
bool yaw_valid
bool body_frame

<span class="c">#Response : success=true - (if async=false &amp;&amp; if setpoint reached before timeout = 30sec) || (if async=true)</span>
bool success
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="c1">// C++ API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from C++.
</span>
<span class="n">Function</span> <span class="n">Definition</span><span class="o">:</span> <span class="kt">int</span> <span class="n">Navigation</span><span class="o">::</span><span class="n">position_set</span><span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">,</span> <span class="kt">float</span> <span class="n">z</span><span class="p">,</span> <span class="kt">float</span> <span class="n">yaw</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">float</span> <span class="n">tolerance</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">relative</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">yaw_valid</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">false</span><span class="p">)</span>
<span class="n">Arguments</span><span class="o">:</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="o">:</span> <span class="n">Position</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">NED</span><span class="o">-</span><span class="n">Frame</span> <span class="p">(</span><span class="n">in</span> <span class="n">body</span><span class="o">-</span><span class="n">frame</span> <span class="k">if</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">true</span><span class="p">)</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">yaw</span><span class="o">:</span> <span class="n">Yaw</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">radians</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">yaw_valid</span><span class="o">:</span> <span class="n">Must</span> <span class="n">be</span> <span class="n">set</span> <span class="n">to</span> <span class="nb">true</span><span class="p">,</span> <span class="k">if</span> <span class="n">yaw</span> <span class="n">setpoint</span> <span class="n">is</span> <span class="n">provided</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">tolerance</span><span class="o">:</span> <span class="n">Acceptance</span> <span class="n">radius</span> <span class="n">in</span> <span class="n">meters</span><span class="p">,</span> <span class="k">default</span> <span class="n">value</span><span class="o">=</span><span class="mf">1.0</span><span class="n">m</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">relative</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">relative</span> <span class="n">to</span> <span class="n">current</span> <span class="n">position</span> <span class="n">is</span> <span class="n">sent</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">async</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">asynchronous</span> <span class="n">mode</span> <span class="n">is</span> <span class="n">set</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">body_frame</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">are</span> <span class="n">relative</span> <span class="n">with</span> <span class="n">respect</span> <span class="n">to</span> <span class="n">body</span> <span class="n">frame</span>
    <span class="o">:</span><span class="k">return</span><span class="o">:</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">true</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">command</span> <span class="n">is</span> <span class="n">successfully</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">the</span> <span class="n">vehicle</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">vehicle</span> <span class="n">reaches</span> <span class="n">given</span> <span class="n">setpoint</span> <span class="n">before</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">30</span><span class="n">secs</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span>
</code></pre><pre class="highlight python tab-python"><code><span class="c"># Python API described below can be used in onboard scripts only. For remote scripts you can use http client libraries to call FlytOS REST endpoints from Python.</span>

<span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="c1">// ROS services and topics are accessible from onboard scripts only.
</span>
<span class="n">Type</span><span class="o">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="o">:</span> <span class="o">/&lt;</span><span class="k">namespace</span><span class="o">&gt;/</span><span class="n">navigation</span><span class="o">/</span><span class="n">position_set</span><span class="p">()</span>
<span class="n">call</span> <span class="n">srv</span><span class="o">:</span>
    <span class="o">:</span><span class="n">geometry_msgs</span><span class="o">/</span><span class="n">TwistStamped</span> <span class="n">twist</span>
    <span class="o">:</span><span class="n">float32</span> <span class="n">tolerance</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">async</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">relative</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">yaw_valid</span>
    <span class="o">:</span><span class="kt">bool</span> <span class="n">body_frame</span>
<span class="n">response</span> <span class="n">srv</span><span class="o">:</span> <span class="kt">bool</span> <span class="n">success</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="c"># ROS services and topics are accessible from onboard scripts only.</span>

<span class="n">Type</span><span class="p">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="p">:</span> <span class="o">/&lt;</span><span class="n">namespace</span><span class="o">&gt;/</span><span class="n">navigation</span><span class="o">/</span><span class="n">position_set</span><span class="p">()</span>
<span class="n">call</span> <span class="n">srv</span><span class="p">:</span>
    <span class="p">:</span><span class="n">geometry_msgs</span><span class="o">/</span><span class="n">TwistStamped</span> <span class="n">twist</span>
    <span class="p">:</span><span class="n">float32</span> <span class="n">tolerance</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">async</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">relative</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">yaw_valid</span>
    <span class="p">:</span><span class="nb">bool</span> <span class="n">body_frame</span>
<span class="n">response</span> <span class="n">srv</span><span class="p">:</span> <span class="nb">bool</span> <span class="n">success</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="nx">This</span> <span class="nx">is</span> <span class="nx">a</span> <span class="nx">REST</span> <span class="nx">call</span> <span class="k">for</span> <span class="nx">the</span> <span class="nx">API</span><span class="p">.</span> <span class="nx">Make</span> <span class="nx">sure</span> <span class="nx">to</span> <span class="nx">replace</span> 
    <span class="nx">ip</span><span class="p">:</span> <span class="nx">ip</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">running</span> <span class="nx">device</span>
    <span class="nl">namespace</span><span class="p">:</span> <span class="nx">namespace</span> <span class="nx">used</span> <span class="nx">by</span> <span class="nx">the</span> <span class="nx">FlytOS</span> <span class="nx">device</span><span class="p">.</span>

<span class="nl">URL</span><span class="p">:</span> <span class="s1">'http://&lt;ip&gt;/list_streams'</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
<span class="p">{</span>   <span class="nl">stream1</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
    <span class="nx">stream2</span><span class="p">:</span> <span class="nb">String</span><span class="p">,....</span> <span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">NA</span>


</code></pre>
<blockquote>
<p>Example</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /&lt;namespace&gt;/navigation/position_set <span class="s2">"twist:
  header:
    seq: 0
    stamp: {secs: 0, nsecs: 0}
    frame_id: ''
  twist:
    linear: {x: 1.0, y: 3.5, z: -5.0}
    angular: {x: 0.0, y: 0.0, z: 0.5}
tolerance: 0.0
async: false
relative: false
yaw_valid: true
body_frame: false"</span>

<span class="c">#sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, relative=false, async=false, yaw_valid=true, body_frame=false</span>
<span class="c">#default value of tolerance=1.0m if left at 0    </span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="cp">#include &lt;core_script_bridge/navigation_bridge.h&gt;
</span>
<span class="n">Navigation</span> <span class="n">nav</span><span class="p">;</span>
<span class="n">nav</span><span class="p">.</span><span class="n">position_set</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">3.5</span><span class="p">,</span> <span class="o">-</span><span class="mf">5.0</span><span class="p">,</span> <span class="mf">0.12</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="nb">true</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
<span class="cp">#sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, tolerance=5.0m, relative=false, async=false, yaw_valid=true, body_frame=false
</span></code></pre><pre class="highlight python tab-python"><code><span class="nb">NotImplemented</span>

</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="cp">#include &lt;core_api/PositionSet.h&gt;
</span>
<span class="n">ros</span><span class="o">::</span><span class="n">NodeHandle</span> <span class="n">nh</span><span class="p">;</span>
<span class="n">ros</span><span class="o">::</span><span class="n">ServiceClient</span> <span class="n">client</span> <span class="o">=</span> <span class="n">nh</span><span class="p">.</span><span class="n">serviceClient</span><span class="o">&lt;</span><span class="n">core_api</span><span class="o">::</span><span class="n">PositionSet</span><span class="o">&gt;</span><span class="p">(</span><span class="s">"navigation/position_set"</span><span class="p">);</span>
<span class="n">core_api</span><span class="o">::</span><span class="n">PositionSet</span> <span class="n">srv</span><span class="p">;</span>

<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mf">0.5</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="mf">3.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">twist</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mf">5.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">tolerance</span> <span class="o">=</span> <span class="mf">2.0</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">async</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">yaw_valid</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">relative</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">srv</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="n">body_frame</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="n">client</span><span class="p">.</span><span class="n">call</span><span class="p">(</span><span class="n">srv</span><span class="p">);</span>
<span class="n">success</span> <span class="o">=</span> <span class="n">srv</span><span class="p">.</span><span class="n">response</span><span class="p">.</span><span class="n">success</span><span class="p">;</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="k">def</span> <span class="nf">setpoint_local_position</span><span class="p">(</span><span class="n">lx</span><span class="p">,</span> <span class="n">ly</span><span class="p">,</span> <span class="n">lz</span><span class="p">,</span> <span class="n">yaw</span><span class="p">,</span> <span class="n">tolerance</span><span class="o">=</span> <span class="mf">0.0</span><span class="p">,</span> <span class="n">async</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span> <span class="n">relative</span><span class="o">=</span> <span class="bp">False</span><span class="p">,</span> <span class="n">yaw_rate_valid</span><span class="o">=</span> <span class="bp">False</span><span class="p">,</span> <span class="n">body_frame</span><span class="o">=</span> <span class="bp">False</span><span class="p">):</span>
    <span class="n">rospy</span><span class="o">.</span><span class="n">wait_for_service</span><span class="p">(</span><span class="s">'namespace/navigation/position_set'</span><span class="p">)</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">handle</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceProxy</span><span class="p">(</span><span class="s">'namespace/navigation/position_set'</span><span class="p">,</span> <span class="n">PositionSet</span><span class="p">)</span>
        <span class="n">twist</span> <span class="o">=</span> <span class="p">{</span><span class="s">'header'</span><span class="p">:</span> <span class="p">{</span><span class="s">'seq'</span><span class="p">:</span> <span class="n">seq</span><span class="p">,</span> <span class="s">'stamp'</span><span class="p">:</span> <span class="p">{</span><span class="s">'secs'</span><span class="p">:</span> <span class="n">sec</span><span class="p">,</span> <span class="s">'nsecs'</span><span class="p">:</span> <span class="n">nsec</span><span class="p">},</span> <span class="s">'frame_id'</span><span class="p">:</span> <span class="n">f_id</span><span class="p">},</span> <span class="s">'twist'</span><span class="p">:</span> <span class="p">{</span><span class="s">'linear'</span><span class="p">:</span> <span class="p">{</span><span class="s">'x'</span><span class="p">:</span> <span class="n">lx</span><span class="p">,</span> <span class="s">'y'</span><span class="p">:</span> <span class="n">ly</span><span class="p">,</span> <span class="s">'z'</span><span class="p">:</span> <span class="n">lz</span><span class="p">},</span> <span class="s">'angular'</span><span class="p">:</span> <span class="p">{</span><span class="s">'z'</span><span class="p">:</span> <span class="n">yaw</span><span class="p">}}}</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">handle</span><span class="p">(</span><span class="n">twist</span><span class="p">,</span> <span class="n">tolerance</span><span class="p">,</span> <span class="n">async</span><span class="p">,</span> <span class="n">relative</span><span class="p">,</span> <span class="n">yaw_rate_valid</span><span class="p">,</span> <span class="n">body_frame</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">resp</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceException</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
        <span class="n">rospy</span><span class="o">.</span><span class="n">logerr</span><span class="p">(</span><span class="s">"pos set service call failed </span><span class="si">%</span><span class="s">s"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>

</code></pre><pre class="highlight javascript tab-javascript--REST"><code>
<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
    <span class="na">type</span><span class="p">:</span> <span class="s2">"GET"</span><span class="p">,</span>
    <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
    <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/list_streams"</span><span class="p">,</span>  
    <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
           <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">NA</span>
</code></pre>
<blockquote>
<p>Example response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="mi">0</span>
</code></pre><pre class="highlight python tab-python"><code><span class="nb">NotImplemented</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="nl">success:</span> <span class="n">True</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Success</span><span class="p">:</span> <span class="bp">True</span>
</code></pre><pre class="highlight javascript tab-javascript--REST"><code><span class="p">{</span>
    <span class="nl">stream1</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">to</span> <span class="nx">stream1</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="nx">stream2</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">to</span> <span class="nx">stream2</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="nx">stream3</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">to</span> <span class="nx">stream3</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="nx">stream4</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">to</span> <span class="nx">stream4</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="nx">stream5</span><span class="p">:</span> <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">to</span> <span class="nx">stream5</span><span class="o">&gt;</span><span class="p">,</span>
    <span class="p">.</span>
    <span class="p">.</span>
    <span class="p">.</span>    
<span class="p">}</span>

</code></pre><pre class="highlight javascript tab-javascript--Websocket"><code><span class="nx">NA</span>
</code></pre>
<h3 id="description">Description:</h3>

<p>This API sends local position setpoint command to the autopilot. Additionally, you can send yaw setpoint (yaw_valid flag must be set true) to the vehicle as well. Some abstract features have been added, such as tolerance/acceptance-radius, synchronous/asynchronous mode, sending setpoints relative to current position (relative flag must be set true), sending setpoints relative to current body frame (body_frame flag must be set true).
This command commands the vehicle to go to a specified location and hover. It overrides any previous mission being carried out and starts hovering.</p>

<h3 id="parameters">Parameters:</h3>

<p>Following parameters are applicable for onboard C++ and Python scripts. Scroll down for their counterparts in RESTful, Websocket, ROS. However the description of these parameters applies to all platforms. </p>

<p>Arguments:</p>

<table><thead>
<tr>
<th>Argument</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>x, y, z</td>
<td>float</td>
<td>Position Setpoint in NED-Frame (in body-frame if body_frame=true)</td>
</tr>
<tr>
<td>yaw</td>
<td>float</td>
<td>Yaw Setpoint in radians</td>
</tr>
<tr>
<td>yaw_valid</td>
<td>bool</td>
<td>Must be set to true, if yaw</td>
</tr>
<tr>
<td>tolerance</td>
<td>float</td>
<td>Acceptance radius in meters, default value=1.0m</td>
</tr>
<tr>
<td>relative</td>
<td>bool</td>
<td>If true, position setpoints relative to current position is sent</td>
</tr>
<tr>
<td>async</td>
<td>bool</td>
<td>If true, asynchronous mode is set</td>
</tr>
<tr>
<td>body_frame</td>
<td>bool</td>
<td>If true, position setpoints are relative with respect to body frame</td>
</tr>
</tbody></table>

<p>Output:</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>success</td>
<td>bool</td>
<td>true if action successful</td>
</tr>
</tbody></table>

<h3 id="ros-endpoint">ROS endpoint:</h3>

<p>Navigation APIs in FlytOS are derived from / wrapped around the core navigation services in ROS. Onboard service clients in rospy / roscpp can call these APIs. Take a look at roscpp and rospy api definition for message structure. </p>

<ul>
<li>Type: Ros Service</br> </li>
<li>Name: /namespace/navigation/position_set</br></li>
<li>Service Type: PositionSet</li>
</ul>

<h3 id="restful-endpoint">RESTful endpoint:</h3>

<p>FlytOS hosts a RESTful server which listens on port 80. RESTful APIs can be called from remote platform of your choice.</p>

<ul>
<li>URL: <code class="prettyprint">GET http://&lt;ip&gt;/list_streams</code></li>
<li>JSON Response:
{
stream1: &lt;link to stream1&gt;,
stream2: &lt;link to stream2&gt;,
stream3: &lt;link to stream3&gt;,
stream4: &lt;link to stream4&gt;,
stream5: &lt;link to stream5&gt;,
.
.
.<br>
}</li>
</ul>

<h3 id="api-usage-information">API usage information:</h3>

<p>Note: To view the video of a particular stream from the list of streams you need to create an <strong>img</strong> tag add the link to its source.</p>

<p><code class="prettyprint">&lt;img src=&#39;http://&lt;ip&gt;/stream?topic=&lt;link to stream1&gt;&#39; &gt;</code></p>

<p>Tip: You can add the following parameters as query string to the link for lighter or better resolution video quality.
width, height, quality, rate:1/2/3</p>

<p>rate:1 will send out every frame, 2 will send out every second frame, 3 every third and so on..</p>

<p>Tip: To stop the video stream you need to delete the <strong>img</strong> tag completely.</p>

<p>Tip: To take a snapshot of the stream replace the word stream with snapshot in the link.</p>

<p><code class="prettyprint">&lt;img src=&#39;http://&lt;ip&gt;/snapshot?topic=&lt;link to stream1&gt;&#39; &gt;</code></p>

<p>Note: <strong>Keep an eye out, for this API needs a port at the end of the IP set to :8080.</strong></p>
