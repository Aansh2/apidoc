<h1 id="namespace">Namespace</h1>

<blockquote>
<p>API definition</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>ROS-Service Name: /get_global_namespace
ROS-Service Type: core_api/ParamGetGlobalNamespace, below is its description

<span class="c">#Request : expects position setpoint via twist.twist.linear.x,linear.y,linear.z</span>
<span class="c">#Request : expects yaw setpoint via twist.twist.angular.z (send yaw_valid=true)</span>
geometry_msgs/TwistStamped twist
float32 tolerance
bool async
bool relative
bool yaw_valid
bool body_frame

<span class="c">#Response : Paramter info</span>
core_api/ParamInfo param_info
<span class="c">#Response : success=true if parameter get was successfull.</span>
bool success
<span class="c">#Response : Returns error message/success message if any.</span>
string message
</code></pre><pre class="highlight cpp tab-cpp"><code><span class="n">Function</span> <span class="n">Definition</span><span class="o">:</span> <span class="kt">int</span> <span class="n">Navigation</span><span class="o">::</span><span class="n">position_set</span><span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">,</span> <span class="kt">float</span> <span class="n">y</span><span class="p">,</span> <span class="kt">float</span> <span class="n">z</span><span class="p">,</span> <span class="kt">float</span> <span class="n">yaw</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">float</span> <span class="n">tolerance</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">relative</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">yaw_valid</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">false</span><span class="p">)</span>
<span class="n">Arguments</span><span class="o">:</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">z</span><span class="o">:</span> <span class="n">Position</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">NED</span><span class="o">-</span><span class="n">Frame</span> <span class="p">(</span><span class="n">in</span> <span class="n">body</span><span class="o">-</span><span class="n">frame</span> <span class="k">if</span> <span class="n">body_frame</span><span class="o">=</span><span class="nb">true</span><span class="p">)</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">yaw</span><span class="o">:</span> <span class="n">Yaw</span> <span class="n">Setpoint</span> <span class="n">in</span> <span class="n">radians</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">yaw_valid</span><span class="o">:</span> <span class="n">Must</span> <span class="n">be</span> <span class="n">set</span> <span class="n">to</span> <span class="nb">true</span><span class="p">,</span> <span class="k">if</span> <span class="n">yaw</span> <span class="n">setpoint</span> <span class="n">is</span> <span class="n">provided</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">tolerance</span><span class="o">:</span> <span class="n">Acceptance</span> <span class="n">radius</span> <span class="n">in</span> <span class="n">meters</span><span class="p">,</span> <span class="k">default</span> <span class="n">value</span><span class="o">=</span><span class="mf">1.0</span><span class="n">m</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">relative</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">relative</span> <span class="n">to</span> <span class="n">current</span> <span class="n">position</span> <span class="n">is</span> <span class="n">sent</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">async</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">asynchronous</span> <span class="n">mode</span> <span class="n">is</span> <span class="n">set</span>
    <span class="o">:</span><span class="n">param</span> <span class="n">body_frame</span><span class="o">:</span> <span class="n">If</span> <span class="nb">true</span><span class="p">,</span> <span class="n">position</span> <span class="n">setpoints</span> <span class="n">are</span> <span class="n">relative</span> <span class="n">with</span> <span class="n">respect</span> <span class="n">to</span> <span class="n">body</span> <span class="n">frame</span>
    <span class="o">:</span><span class="k">return</span><span class="o">:</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">true</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">command</span> <span class="n">is</span> <span class="n">successfully</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">the</span> <span class="n">vehicle</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span> <span class="n">For</span> <span class="n">async</span><span class="o">=</span><span class="nb">false</span><span class="p">,</span> <span class="n">returns</span> <span class="mi">0</span> <span class="k">if</span> <span class="n">the</span> <span class="n">vehicle</span> <span class="n">reaches</span> <span class="n">given</span> <span class="n">setpoint</span> <span class="n">before</span> <span class="n">timeout</span><span class="o">=</span><span class="mi">30</span><span class="n">secs</span><span class="p">,</span> <span class="k">else</span> <span class="n">returns</span> <span class="mf">1.</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">Class</span><span class="p">:</span> <span class="n">flyt_python</span><span class="o">.</span><span class="n">api</span><span class="o">.</span><span class="n">navigation</span>
<span class="n">Function</span> <span class="n">Definition</span><span class="p">:</span> <span class="n">get_global_namespace</span><span class="p">()</span>
<span class="n">Arguments</span><span class="p">:</span> <span class="bp">None</span>
<span class="k">return</span><span class="p">:</span> <span class="n">string</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="n">Function</span> <span class="n">Definition</span><span class="o">:</span> <span class="kt">void</span> <span class="n">ros</span><span class="o">::</span><span class="n">param</span><span class="o">::</span><span class="n">get</span><span class="p">(</span><span class="s">"/global_namespace"</span><span class="p">,</span> <span class="n">string</span> <span class="n">global_namespace</span><span class="p">)</span>
<span class="n">Arguments</span><span class="o">:</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Type</span><span class="p">:</span> <span class="n">Ros</span> <span class="n">Service</span>
<span class="n">Name</span><span class="p">:</span> <span class="o">/</span><span class="n">get_global_namespce</span><span class="p">()</span>
<span class="n">response</span> <span class="n">srv</span><span class="p">:</span> <span class="n">ParamGetGlobalNamespace</span>

</code></pre><pre class="highlight javascript tab-javascript"><code><span class="nx">URL</span><span class="p">:</span> <span class="s1">' &lt;ip&gt;/ros/get_global_namespace'</span>

<span class="nx">JSON</span> <span class="nx">Response</span><span class="p">:</span>
    <span class="p">{</span>
        <span class="nl">success</span><span class="p">:</span> <span class="nb">Boolean</span>
        <span class="nl">param_info</span><span class="p">:{</span>
            <span class="nl">param_value</span><span class="p">:</span> <span class="nb">String</span>
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre><pre class="highlight java tab-java"><code>
</code></pre>
<blockquote>
<p>Example API call</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>rosservice call /&lt;namespace&gt;/navigation/position_set <span class="s2">"twist:
  header:
    seq: 0
    stamp: {secs: 0, nsecs: 0}
    frame_id: ''
  twist:
    linear: {x: 1.0, y: 3.5, z: -5.0}
    angular: {x: 0.0, y: 0.0, z: 0.5}
tolerance: 0.0
async: false
relative: false
yaw_valid: true
body_frame: false"</span>

<span class="c">#sends (x,y,z)=(1.0,3.5,-5.0)(m), yaw=0.12rad, relative=false, async=false, yaw_valid=true, body_frame=false</span>
<span class="c">#default value of tolerance=1.0m if left at 0    </span>
</code></pre><pre class="highlight python tab-python"><code><span class="kn">from</span> <span class="nn">flyt_python</span> <span class="kn">import</span> <span class="n">api</span>
<span class="n">drone</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">navigation</span><span class="p">()</span>
<span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">3.0</span><span class="p">)</span>
<span class="n">namespace</span> <span class="o">=</span> <span class="n">drone</span><span class="o">.</span><span class="n">get_global_namespace</span><span class="p">()</span>

</code></pre><pre class="highlight cpp tab-cpp--ros"><code>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="k">def</span> <span class="nf">get_global_namespace</span><span class="p">():</span>
    <span class="n">rospy</span><span class="o">.</span><span class="n">wait_for_service</span><span class="p">(</span><span class="s">'/get_global_namespace'</span><span class="p">)</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceProxy</span><span class="p">(</span><span class="s">'/get_global_namespace'</span><span class="p">,</span> <span class="n">ParamGetGlobalNamespace</span><span class="p">)</span>
        <span class="n">op</span> <span class="o">=</span> <span class="n">res</span><span class="p">()</span>
        <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="n">op</span><span class="o">.</span><span class="n">param_info</span><span class="o">.</span><span class="n">param_value</span><span class="p">)</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="o">.</span><span class="n">ServiceException</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
        <span class="n">rospy</span><span class="o">.</span><span class="n">logerr</span><span class="p">(</span><span class="s">"global namespace service not available"</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">None</span>

</code></pre><pre class="highlight javascript tab-javascript"><code>    <span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
        <span class="na">type</span><span class="p">:</span> <span class="s2">"GET"</span><span class="p">,</span>
        <span class="na">dataType</span><span class="p">:</span> <span class="s2">"json"</span><span class="p">,</span>
        <span class="na">url</span><span class="p">:</span> <span class="s2">"http://&lt;ip&gt;/ros/get_global_namespace"</span><span class="p">,</span>   
        <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">});</span>


</code></pre><pre class="highlight javascript tab-javascript--Webocket"><code>
</code></pre>
<blockquote>
<p>Example API Response</p>
</blockquote>
<pre class="highlight shell tab-shell"><code>success: <span class="nb">true</span>
</code></pre><pre class="highlight python tab-python"><code><span class="n">flytpod</span>
</code></pre><pre class="highlight cpp tab-cpp--ros"><code><span class="nl">param_info:</span> 
  <span class="n">param_id</span><span class="o">:</span> <span class="n">global_namespace</span>
  <span class="n">param_value</span><span class="o">:</span> <span class="n">flytpod</span>
<span class="n">success</span><span class="o">:</span> <span class="n">True</span>
<span class="n">message</span><span class="o">:</span> <span class="n">Parameter</span> <span class="n">Get</span> <span class="n">Global</span> <span class="n">Namespace</span> <span class="n">Successful</span>  <span class="n">flytpod</span>
</code></pre><pre class="highlight python tab-python--ros"><code><span class="n">Response</span> <span class="nb">object</span> <span class="k">with</span> <span class="n">following</span> <span class="n">structure</span><span class="o">.</span>
<span class="n">param_info</span><span class="p">:</span> 
  <span class="n">param_id</span><span class="p">:</span> <span class="n">global_namespace</span>
  <span class="n">param_value</span><span class="p">:</span> <span class="n">flytpod</span>
<span class="n">success</span><span class="p">:</span> <span class="bp">True</span>
<span class="n">message</span><span class="p">:</span> <span class="n">Parameter</span> <span class="n">Get</span> <span class="n">Global</span> <span class="n">Namespace</span> <span class="n">Successful</span>  <span class="n">flytpod</span>
</code></pre><pre class="highlight javascript tab-javascript"><code>    <span class="nx">data</span><span class="p">:{</span>
        <span class="nl">success</span><span class="p">:</span><span class="nx">True</span><span class="p">,</span>
        <span class="nx">param_info</span><span class="p">:{</span>
            <span class="nl">param_value</span><span class="p">:</span><span class="s1">'flytpod'</span>
        <span class="p">}</span>
    <span class="p">}</span>

</code></pre><pre class="highlight java tab-java"><code>
</code></pre>
<p>This API returns the namespace under which FlytOS is running. By default, namespace is set to flytpod for FlytOS and flytsim for FlytSim. This API is only available in ROS as CPP/Python APIs do not need this information.This is required for making python, cpp service calls and REST calls for the all other APIs.</p>

<p><code class="prettyprint">GET http://&lt; ip &gt;/ros/get_global_namepsace</code></p>
